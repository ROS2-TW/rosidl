import @(spec.base_type.pkg_name)_@(spec.base_type.type)_c

class @(spec.base_type.type):

    __SETTERS = {
@[for field in spec.fields]
        '@(field.name)': @(spec.base_type.pkg_name)_@(spec.base_type.type)_c.set_@(field.name),
@[end for]
    }

    __GETTERS = {
@[for field in spec.fields]
        '@(field.name)': @(spec.base_type.pkg_name)_@(spec.base_type.type)_c.get_@(field.name),
@[end for]
    }

    def __init__(self, data=None):
        object.__setattr__(self, '__obj_handle', @(spec.base_type.pkg_name)_@(spec.base_type.type)_c.create())

    def __getattr__(self, key):
        return self.__GETTERS[key](object.__getattribute__(self, '__obj_handle'))

    def __setattr__(self, key, value):
        self.__SETTERS[key](object.__getattribute__(self, '__obj_handle'), value)

    def __del__(self):
        @(spec.base_type.pkg_name)_@(spec.base_type.type)_c.destroy(object.__getattribute__(self, '__obj_handle'))
